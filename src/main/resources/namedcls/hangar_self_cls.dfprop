# /---------------------------------------------------------------------------
# appcls: (NotRequired - Default map:{})
#
# The definition of application classification.
#
# Specification:
# map: {
#     [classification-name] = list:{
#         ; map:{ topComment=[comment]; codeType=[String(default) or Number or Boolean] }
#         ; map:{ refCls=[projectName]@[DB classification name] ; refType=[included or exists or matches] }
#         ; map:{ code=[code]; name=[name]; alias=[alias]; comment=[comment] }
#     }
# }
#
# *The line that starts with '#' means comment-out.
#
map:{
    ; SearchMemberStatus = list:{
        ; map:{
            ; topComment=MemberStatus for search condition
            ; codeType=String
        }
        ; map:{
            ; code=FML ; name=Formalized ; alias=Formalized ; comment=as formal member, allowed to use all service
        }
        ; map:{
            ; code=WDL ; name=Withdrawal ; alias=Withdrawal ; comment=withdrawal is fixed, not allowed to use service
        }
        ; map:{
            ; code=PRV ; name=Provisional ; alias=Provisional ; comment=first status after entry, allowed to use only part of service
        }
        ; map:{
            ; code=ALL ; name=All ; alias=All Statuses ; comment=without status filter
        }
    }
    ; TestDeprecatedClsStatus = list:{
        ; map:{
            ; topComment=MemberStatus for search condition
            ; codeType=String
        }
        ; map:{
            ; code=FML ; name=Formalized ; alias=Formalized ; comment=as formal member, allowed to use all service
        }
        ; map:{
            ; code=WDL ; name=Withdrawal ; alias=Withdrawal ; comment=withdrawal is fixed, not allowed to use service
        }
        ; map:{
            ; code=PRV ; name=Provisional ; alias=Provisional ; comment=first status after entry, allowed to use only part of service
        }
        ; map:{
            ; code=ALL ; name=All ; alias=All Statuses ; comment=without status filter
        }
    }
}
# ----------------/