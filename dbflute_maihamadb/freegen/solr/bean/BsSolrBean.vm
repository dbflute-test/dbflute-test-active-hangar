##
## Copyright 2014-2021 the original author or authors.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
## either express or implied. See the License for the specific language
## governing permissions and limitations under the License.
##
${manager.allClassCopyright}package ${request.package}.bean.bs;

import java.io.Serializable;

/**
 * @author FreeGen
 */
public class ${optionMap.baseBeanClassName} implements Serializable {

    private static final long serialVersionUID = 1L;

    // ===================================================================================
    //                                                                           Attribute
    //                                                                           =========
#foreach ($column in $table.columnList)
#if ($column.isDynamic)
#if ($column.hasKeyword)
    /** dynamic field: ${column.name} (${column.nativeType}) cap=${column.uncapCamelName}, ${column.capCamelName} */
    protected ${column.type} dynamic${column.keyword}dynamic;
#end
#if ($column.hasPrefixOnly)
    /** dynamic field: ${column.name} (${column.nativeType}) cap=${column.uncapCamelName}, ${column.capCamelName} */
    protected ${column.type} ${column.prefix}dynamic;
#end
#if ($column.hasSuffixOnly)
    /** dynamic field: ${column.name} (${column.nativeType}) cap=${column.uncapCamelName}, ${column.capCamelName} */
    protected ${column.type} dynamic${column.suffix};
#end
#if ($column.hasBothPrefixSuffix)
    /** dynamic field: ${column.name} (${column.nativeType}) cap=${column.uncapCamelName}, ${column.capCamelName} */
    protected ${column.type} ${column.prefix}dynamic${column.suffix};
#end
#else
    /** ${column.name} (${column.nativeType}) */
    protected ${column.type} ${column.uncapCamelName};
#end

#end
    // ===================================================================================
    //                                                                            Accessor
    //                                                                            ========
#foreach ($column in $table.columnList)
#if ($column.isDynamic)
    // dynamic field: ${column.name} (${column.nativeType})
#else
    public ${column.type} get${column.capCamelName}() {
        return ${column.uncapCamelName};
    }

    public void set${column.capCamelName}(${column.type} value) {
        ${column.uncapCamelName} = value;
    }

#end
#end
}
