map:{
    # ====================================================================================
    #                                                                AppCls as Single File
    #                                                                =====================
    # test of independent classification generation
    ; LastaAppClsBasicSingleGen = map:{
        ; resourceMap = map:{
            ; resourceType = APP_CLS
            ; resourceFile = ../src/main/resources/freedb/mystic_appcls.dfprop
        }
        ; outputMap = map:{
            ; outputDirectory = ../src/main/java
            ; package = org.docksidestage.hangar.freeflute.lasta.appcls
            ; templateFile = lasta/appcls/HangarAppCls.vm
            ; className = MysticAppCls
        }
        ; optionMap = map:{
            ; clsTitle = mystic

            # test of option to supress redundant comment stop
            #; isSuppressRedundantCommentStop = true
            ; isMakeCDefOldStyleCodeOfMethod = false
            ; isMakeCDefOldStyleNameOfMethod = false
            ; isMakeCDefOldStyleListOfMethod = false
            ; isMakeCDefOldStyleGroupOfMethod = false
        }
    }
    # test of dfprop generation, already embedded however quick test here
    ; LastaClientClsBasicSingleGen = map:{
        ; resourceMap = map:{
            ; resourceType = APP_CLS
            ; resourceFile = ../src/main/resources/hangar_appcls.dfprop
        }
        ; outputMap = map:{
            ; outputDirectory = ../target
            ; package = freegen
            ; templateFile = lasta/appcls/HangarClientCls.vm
            ; className = hangar_quickself_cls
            ; fileExt = dfprop
        }
        ; optionMap = map:{
            ; serverServiceName = hangar
        }
    }

    # ====================================================================================
    #                                                          AppCls as Independent Files
    #                                                          ===========================
    # test of application classification as independent files
    # APP_CLS is only-one table style so you need to customize it by control file
    ; LastaAppClsIndependentGen = map:{
        ; resourceMap = map:{
            ; resourceType = APP_CLS
            ; resourceFile = ../src/main/resources/freedb/mystic_appcls.dfprop
        }
        ; outputMap = map:{
            ; outputDirectory = ../src/main/java
            ; package = org.docksidestage.hangar.freeflute.lasta.appcls.independent
            ; templateFile = lasta/appcls/independent/HangarAppClsIndependent.vm
            # because of customization of control file
            #; className = unused
        }
        ; optionMap = map:{
            # test of option to supress redundant comment stop
            #; isSuppressRedundantCommentStop = true
        }
    }
}